paths:
  /api/products:
    get:
      summary: Get a list of products
      parameters:
        - name: limit
          in: query
          description: Limit number of products to return
          schema:
            type: integer
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
        - name: sort
          in: query
          description: Sorting order ('asc' or 'desc')
          schema:
            type: string
        - name: status
          in: query
          description: Filter by product status
          schema:
            type: string
        - name: category
          in: query
          description: Filter by product category
          schema:
            type: string
        - name: title
          in: query
          description: Filter by product title
          schema:
            type: string
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error
    post:
      summary: Add a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: The created product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /api/products/{pid}:
    get:
      summary: Get a product by ID
      parameters:
        - name: pid
          in: path
          required: true
          description: Product ID
          schema:
            type: string
      responses:
        '200':
          description: The requested product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Internal server error
    put:
      summary: Update a product by ID
      parameters:
        - name: pid
          in: path
          required: true
          description: Product ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: The updated product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a product by ID
      parameters:
        - name: pid
          in: path
          required: true
          description: Product ID
          schema:
            type: string
      responses:
        '200':
          description: Confirmation of product deletion
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Product not found
        '500':
          description: Internal server error
components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: string
          description: The product's title
        description:
          type: string
          description: The product's description
        price:
          type: number
          description: The product's price
        thumbnail:
          type: string
          description: The product's thumbnail URL
        code:
          type: string
          description: The product's code
        stock:
          type: number
          description: The product's stock
        status:
          type: boolean
          description: The product's status
        category:
          type: string
          description: The product's category
        owner:
          type: string
          description: The product's owner